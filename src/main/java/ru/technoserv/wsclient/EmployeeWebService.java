
package ru.technoserv.wsclient;

import java.math.BigDecimal;
import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EmployeeWebService", targetNamespace = "http://ws.technoserv.ru/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EmployeeWebService {


    /**
     * 
     * @param positionId
     * @param employeeId
     * @return
     *     returns javax.xml.ws.Response<ru.technoserv.ws.ChangePositionResponse>
     */
    @WebMethod(operationName = "changePosition")
    @RequestWrapper(localName = "changePosition", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangePosition")
    @ResponseWrapper(localName = "changePositionResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangePositionResponse")
    public Response<ChangePositionResponse> changePositionAsync(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "PositionId", targetNamespace = "")
                    int positionId);

    /**
     * 
     * @param positionId
     * @param employeeId
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "changePosition")
    @RequestWrapper(localName = "changePosition", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangePosition")
    @ResponseWrapper(localName = "changePositionResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangePositionResponse")
    public Future<?> changePositionAsync(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "PositionId", targetNamespace = "")
                    int positionId,
            @WebParam(name = "asyncHandler", targetNamespace = "")
                    AsyncHandler<ChangePositionResponse> asyncHandler);

    /**
     * 
     * @param positionId
     * @param employeeId
     */
    @WebMethod
    @RequestWrapper(localName = "changePosition", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangePosition")
    @ResponseWrapper(localName = "changePositionResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangePositionResponse")
    @Action(input = "http://ws.technoserv.ru/EmployeeWebService/changePositionRequest", output = "http://ws.technoserv.ru/EmployeeWebService/changePositionResponse")
    public void changePosition(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "PositionId", targetNamespace = "")
                    int positionId);

    /**
     * 
     * @param gradeId
     * @param employeeId
     * @return
     *     returns javax.xml.ws.Response<ru.technoserv.ws.ChangeGradeResponse>
     */
    @WebMethod(operationName = "changeGrade")
    @RequestWrapper(localName = "changeGrade", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeGrade")
    @ResponseWrapper(localName = "changeGradeResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeGradeResponse")
    public Response<ChangeGradeResponse> changeGradeAsync(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "GradeId", targetNamespace = "")
                    int gradeId);

    /**
     * 
     * @param gradeId
     * @param employeeId
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "changeGrade")
    @RequestWrapper(localName = "changeGrade", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeGrade")
    @ResponseWrapper(localName = "changeGradeResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeGradeResponse")
    public Future<?> changeGradeAsync(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "GradeId", targetNamespace = "")
                    int gradeId,
            @WebParam(name = "asyncHandler", targetNamespace = "")
                    AsyncHandler<ChangeGradeResponse> asyncHandler);

    /**
     * 
     * @param gradeId
     * @param employeeId
     */
    @WebMethod
    @RequestWrapper(localName = "changeGrade", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeGrade")
    @ResponseWrapper(localName = "changeGradeResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeGradeResponse")
    @Action(input = "http://ws.technoserv.ru/EmployeeWebService/changeGradeRequest", output = "http://ws.technoserv.ru/EmployeeWebService/changeGradeResponse")
    public void changeGrade(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "GradeId", targetNamespace = "")
                    int gradeId);

    /**
     * 
     * @param employeeId
     * @param salary
     * @return
     *     returns javax.xml.ws.Response<ru.technoserv.ws.ChangeSalaryResponse>
     */
    @WebMethod(operationName = "changeSalary")
    @RequestWrapper(localName = "changeSalary", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeSalary")
    @ResponseWrapper(localName = "changeSalaryResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeSalaryResponse")
    public Response<ChangeSalaryResponse> changeSalaryAsync(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "Salary", targetNamespace = "")
                    BigDecimal salary);

    /**
     * 
     * @param employeeId
     * @param salary
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "changeSalary")
    @RequestWrapper(localName = "changeSalary", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeSalary")
    @ResponseWrapper(localName = "changeSalaryResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeSalaryResponse")
    public Future<?> changeSalaryAsync(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "Salary", targetNamespace = "")
                    BigDecimal salary,
            @WebParam(name = "asyncHandler", targetNamespace = "")
                    AsyncHandler<ChangeSalaryResponse> asyncHandler);

    /**
     * 
     * @param employeeId
     * @param salary
     */
    @WebMethod
    @RequestWrapper(localName = "changeSalary", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeSalary")
    @ResponseWrapper(localName = "changeSalaryResponse", targetNamespace = "http://ws.technoserv.ru/", className = "ru.technoserv.ws.ChangeSalaryResponse")
    @Action(input = "http://ws.technoserv.ru/EmployeeWebService/changeSalaryRequest", output = "http://ws.technoserv.ru/EmployeeWebService/changeSalaryResponse")
    public void changeSalary(
            @WebParam(name = "employeeId", targetNamespace = "")
                    int employeeId,
            @WebParam(name = "Salary", targetNamespace = "")
                    BigDecimal salary);

}
